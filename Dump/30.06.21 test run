from ev3dev2 import motor
from ev3dev2.sensor.lego import *
from ev3dev2.sensor import INPUT_1, INPUT_4
import statistics
import threading
import traceback


class Poll:
    def __init__(self,*sensors):
        self.us=list(filter(lambda x:isinstance(x,UltrasonicSensor),sensors))
        self.us_baseline=0
        self.polling=threading.Event()
    def poll(self,poll_run):
        n=0
        while poll_run.is_set():
            self.us_baseline+=(min([x.distance_centimeters for x in self.us])-self.us_baseline)/(n+1)
            n+=1
    def start(self):
        self.polling.set()
        self.polls=threading.Thread(target=self.poll,args=(self.polling,),daemon=True)
        self.polls.start()
    def stop(self):
        self.polling.clear()
        self.polls.join()

us=UltrasonicSensor(INPUT_4)
tank=motor.MoveTank(motor.OUTPUT_B,motor.OUTPUT_C)
polling=Poll(us)
polling.start()
try:
    while True:
        print(polling.us_baseline)
        print(us.distance_centimeters)
        tank.on_for_seconds(100,100,1)
except:
    polling.stop()
    traceback.print_exc()

