from ev3dev2.sensor.lego import UltrasonicSensor
import threading

class Poll:
    def __init__(self,*sensors):
        self.us=list(filter(lambda x:isinstance(x,UltrasonicSensor),sensors))
        self.us_baseline=0
        self.polling=threading.Event()
    def poll(self,poll_run):
        n=0
        while poll_run.is_set():
            n+=1
            try:
                self.us_baseline+=(min([x.distance_centimeters for x in self.us])-self.us_baseline)/n
            except Exception:
                pass
    def start(self):
        self.polling.set()
        self.polls=threading.Thread(target=self.poll,args=(self.polling,),daemon=True)
        self.polls.start()
    def stop(self):
        self.polling.clear()
        self.polls.join()
